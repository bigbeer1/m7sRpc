// Code generated by goctl. DO NOT EDIT.
// Source: m7.proto

package m7

import (
	"context"
	"github.com/bigbeer1/m7sRpc/m7client"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CommonResp = m7client.CommonResp
	TestReq    = m7client.TestReq
	TestResp   = m7client.TestResp

	M7 interface {
		// 用户登录
		Test(ctx context.Context, in *TestReq, opts ...grpc.CallOption) (*TestResp, error)
	}

	defaultM7 struct {
		cli zrpc.Client
	}
)

func NewM7(cli zrpc.Client) M7 {
	return &defaultM7{
		cli: cli,
	}
}

// 用户登录
func (m *defaultM7) Test(ctx context.Context, in *TestReq, opts ...grpc.CallOption) (*TestResp, error) {
	client := m7client.NewM7Client(m.cli.Conn())
	return client.Test(ctx, in, opts...)
}
